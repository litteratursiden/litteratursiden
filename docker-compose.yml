version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
      - MYSQL_DATABASE=db
      #- ENCRYPT=1 # Uncomment to enable database encryptionn.

  phpfpm:
    image: itkdev/php7.2-fpm:latest
    networks:
      - app
    environment:
      - PHP_XDEBUG=${PHP_XDEBUG:-0}
      - PHP_XDEBUG_REMOTE_AUTOSTART=${PHP_XDEBUG_REMOTE_AUTOSTART:-0}
      - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK:-0}
      - PHP_MAX_EXECUTION_TIME=300
      - PHP_MEMORY_LIMIT=256M
      - PHP_IDE_CONFIG=serverName=localhost
      - DOCKER_HOST_DOMAIN=${COMPOSE_DOMAIN}
      - COMPOSER_VERSION=2
    depends_on:
      - mariadb
    volumes:
      - .:/app:delegated
      - drush-cache:/root/.drush

  littnginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
      - memcached
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated

  varnish:
    image: 'wodby/varnish:6'
    ports:
      - '6081'
    networks:
      - app
      - frontend
    depends_on:
      - littnginx
    environment:
      VARNISHD_VCL_SCRIPT: /etc/varnish/litt.vcl
      VARNISH_SECRET: eca2b7c263eae74c0d746f147691e7ce
    volumes:
      - ${PWD}/.docker/litt.vcl:/etc/varnish/litt.vcl:ro
    labels:
      - "traefik.enable=true"
      - "traefik.port=6081"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"

  es:
    image: elasticsearch:6.7.0
    networks:
      - app
    environment:
      - discovery.type=single-node
    ports:
      - "9200"
      - "9300"

  memcached:
    image: 'memcached:latest'
    networks:
      - app
    ports:
      - '11211'
    environment:
      - MEMCACHED_CACHE_SIZE=64

  mailhog:
    image: mailhog/mailhog
    networks:
      - app
    ports:
      - "1025"
      - "8025"

  node:
    image: node:6
    networks:
      - app
    volumes:
      - .:/app:delegated

# Drush cache volume to persist cache between runs.
volumes:
  drush-cache:
